input1 = {"val" = 5, "left" = {"val" = 4, "left" = {"val" = 11, "left" = {"val" = 7}, "right" = {"val" = 2}}},
		"right" = {"val" = 8, "left" = {"val" = 13}, "right" = {"val" = 4, "left" = {"val" = 5}, "right" = {"val" = 1}}}}

def recurse(root, sum, ls, str)
	str += tostring(root.val)
	ls += root.val
	local s = str

	local left = root.left
	local right = root.right
	if left == null && right == null then
		if ls == sum then
			print(str)
		end
	end

	if left != null then
		str += "->"
		recurse(left, sum, ls, str)
		str = s
	end

	if right != null then
		str += "->"
		recurse(right, sum, ls, str)
		str = s
	end
end

def hasPathSum(root, sum)
	recurse(root, sum, 0, "")
end

hasPathSum(input1, 22)
print("-------------------")
hasPathSum(input1, 18)
print("-------------------")
hasPathSum(input1, 23)